BEGIN FILE: COMPLETE_BASE44_RECONSTRUCTION_PROMPT

=== TENNIS TRACKER - COMPLETE BASE44 RECONSTRUCTION PROMPT ===

CRITICAL: This is the COMPLETE prompt for Base44 to reconstruct the Tennis Tracker app with EXACT visual specifications, animations, and functionality.

=== PROJECT OVERVIEW ===

You are reconstructing a professional Tennis Coaching Management Application with the following EXACT specifications:

**App Name**: Tennis Tracker
**Purpose**: Complete tennis coaching management system for tracking students, groups, attendance, and sessions
**Design**: Dark theme with glass morphism effects, purple/pink/blue gradient accents
**Functionality**: Guest mode only (no authentication), local storage persistence
**Target**: Mobile-first responsive design for tennis coaches

=== EXACT VISUAL REQUIREMENTS ===

**Background**:
- Color: #0a0a0a (dark black)
- Multiple radial gradients for depth:
  * Circle at 20% 50%: rgba(120, 119, 198, 0.15) to transparent
  * Circle at 80% 20%: rgba(255, 119, 198, 0.15) to transparent  
  * Circle at 40% 80%: rgba(120, 200, 255, 0.15) to transparent
- Background attachment: fixed
- Min-height: 100vh
- Overflow-x: hidden

**Glass Morphism Effects**:
- Cards: rgba(255, 255, 255, 0.08) background, blur(20px), 12px border-radius
- Buttons: rgba(255, 255, 255, 0.1) background, blur(15px), 8px border-radius
- Inputs: rgba(255, 255, 255, 0.03) background, blur(15px), 8px border-radius
- All elements have subtle borders: rgba(255, 255, 255, 0.1)
- Box shadows: 0 4px 32px rgba(0, 0, 0, 0.3) for cards
- Hover effects: translateY(-1px) with enhanced shadows

**Color Scheme**:
- Primary White: #ffffff
- Secondary White: rgba(255, 255, 255, 0.85)
- Tertiary White: rgba(255, 255, 255, 0.65)
- Status Colors:
  * Present: green-500/20 with green-400 border
  * Absent: red-500/20 with red-400 border
  * Makeup: orange-500/20 with orange-400 border
  * Blue accents: #3b82f6

**Typography**:
- Font: Arial, Helvetica, sans-serif
- Text sizes: xs (0.75rem), sm (0.875rem), base (1rem), lg (1.125rem), xl (1.25rem), 2xl (1.5rem)

=== EXACT ANIMATION REQUIREMENTS ===

**Framer Motion Animations**:
- Page entrance: fadeInUp 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)
- Card animations: spring transitions with stiffness 300, damping 30
- Button animations: hover scale 1.05, tap scale 0.95
- Staggered list animations: 0.1s delay between children
- Modal animations: spring entrance with scale and y transforms
- Swipe gestures: horizontal pan support for mobile navigation
- Loading animations: spin (1s linear infinite), pulse (2s ease-in-out infinite)

**CSS Transitions**:
- All buttons: 0.3s cubic-bezier(0.4, 0, 0.2, 1)
- Hover effects: translateY(-1px)
- Color transitions: 0.2s ease-in-out
- Focus states: ring-2 ring-white/20

=== EXACT LAYOUT SPECIFICATIONS ===

**Container**:
- Max-width: 1400px, centered
- Desktop padding: 2rem
- Mobile padding: 1rem

**Grid System**:
- Desktop: 4 columns for summary cards
- Mobile: 1 column, stacked
- Gap: 1rem desktop, 0.5rem mobile

**Card Layout**:
- Rounded corners: 12px
- Padding: 1.5rem (p-6)
- Hover: bg-white/5 transition-colors

**Mobile Responsiveness**:
- Breakpoints: 768px (mobile), 1024px (desktop)
- Touch targets: min-height 44px
- Reduced backdrop blur on mobile: 15px

=== CORE FUNCTIONALITY REQUIREMENTS ===

**1. Dashboard Overview**:
- 4 summary cards in a row (desktop) / stacked (mobile):
  * Total Students
  * Active Groups  
  * Pending Makeups
  * This Month's Sessions
- Each card shows icon, number, and description
- Glass morphism styling with hover effects

**2. Student Management**:
- List of all students with expandable cards
- Each student shows: name, prepaid sessions, remaining sessions, makeup sessions
- Group badges showing which groups student belongs to
- Add/Edit/Delete student functionality
- Smart mode toggle (Users icon vs Brain icon)
- Search functionality with glass input

**3. Group Management**:
- List of all groups (group lessons and private lessons)
- Each group shows: name, type, student count, schedule
- Add/Edit/Delete group functionality
- Student assignment to groups
- Schedule management (day of week, time, duration)

**4. Attendance Tracking**:
- Toggle between Calendar mode and Smart mode
- Calendar mode: date picker with attendance records
- Smart mode: AI-powered attendance suggestions
- Present/Absent buttons with status colors
- Real-time session tracking
- Makeup session creation for absences

**5. Makeup Session Management**:
- Pending makeup sessions list
- Completed makeup sessions list
- Each makeup shows: student, original date, reason, status
- Schedule makeup sessions
- Mark makeup sessions as completed

**6. Reports & Analytics**:
- Monthly attendance reports
- Student progress tracking
- Session history
- Export functionality

**7. Term Management**:
- Archive completed terms
- View archived data
- Term finalization process

=== EXACT COMPONENT SPECIFICATIONS ===

**Summary Cards**:
```html
<div class="glass-card p-6">
  <div class="flex items-center gap-3">
    <div class="w-10 h-10 rounded-lg bg-blue-500/20 flex items-center justify-center">
      <Icon class="h-5 w-5 text-blue-400" />
    </div>
    <div>
      <p class="text-2xl font-bold text-primary-white">123</p>
      <p class="text-sm text-secondary-white">Total Students</p>
    </div>
  </div>
</div>
```

**Student Cards**:
```html
<div class="glass-card p-4 cursor-pointer hover:bg-white/5 transition-colors">
  <div class="flex items-center justify-between">
    <div>
      <h3 class="font-semibold text-primary-white">Student Name</h3>
      <p class="text-sm text-secondary-white">5 remaining sessions</p>
    </div>
    <div class="flex gap-2">
      <Badge class="text-xs glass-card text-primary-white border-white/20">Group Name</Badge>
    </div>
  </div>
</div>
```

**Status Buttons**:
```html
<button class="glass-button transition-all duration-200 ease-in-out transform min-w-[60px] sm:min-w-[80px] bg-green-500/20 border-2 border-green-400 text-green-300 font-semibold ring-2 ring-green-400/40">
  Present
</button>
```

**Smart Mode Toggle**:
```html
<div class="flex items-center gap-2">
  <Icon class="h-4 w-4 transition-colors duration-300 text-blue-400" />
  <Switch class="data-[state=checked]:bg-blue-500/30 data-[state=unchecked]:bg-white/10 transition-all duration-200 ease-in-out" />
  <Icon class="h-4 w-4 transition-colors duration-300 text-blue-400" />
</div>
```

=== EXACT INTERACTION PATTERNS ===

**Hover Effects**:
- Cards: bg-white/5 background change
- Buttons: translateY(-1px) with enhanced shadow
- Links: underline with offset

**Click Effects**:
- Buttons: translateY(0) on active
- Cards: subtle scale (1.02)
- Smooth transitions

**Focus States**:
- Inputs: ring-2 ring-white/20
- Buttons: ring-2 ring-white/20
- Keyboard navigation support

**Mobile Gestures**:
- Swipe left/right to navigate between tabs
- Touch-friendly button sizes
- Optimized for one-handed use

=== EXACT DATA STRUCTURE ===

**Student Object**:
```javascript
{
  id: string,
  name: string,
  notes: string,
  prepaidSessions: number,
  remainingSessions: number,
  makeupSessions: number,
  sessionHistory: Array<{
    date: string,
    type: "attended" | "missed" | "makeup" | "cancelled",
    groupId?: string,
    notes?: string
  }>
}
```

**Group Object**:
```javascript
{
  id: string,
  name: string,
  type: "group" | "private",
  studentIds: string[],
  dayOfWeek?: string | string[],
  time?: string,
  duration?: string
}
```

**Attendance Record**:
```javascript
{
  id: string,
  date: string,
  time: string,
  groupId: string,
  studentId: string,
  status: "present" | "absent" | "canceled",
  notes: string,
  cancelReason?: string
}
```

**Makeup Session**:
```javascript
{
  id: string,
  studentId: string,
  originalDate: string,
  originalGroupId: string,
  reason: string,
  notes: string,
  createdDate: string,
  status: "pending" | "scheduled" | "completed",
  scheduledDate?: string,
  scheduledTime?: string,
  scheduledGroupId?: string
}
```

=== EXACT IMPLEMENTATION REQUIREMENTS ===

**1. Use the EXACT color values provided**
**2. Apply the EXACT glass morphism effects**
**3. Implement the EXACT animations and transitions**
**4. Follow the EXACT layout specifications**
**5. Use the EXACT typography settings**
**6. Apply the EXACT mobile responsive breakpoints**
**7. Include the EXACT hover and focus states**
**8. Use the EXACT shadow and blur effects**

**9. Implement ALL core functionality**:
- Student management with prepaid/remaining sessions
- Group management with scheduling
- Attendance tracking with calendar and smart modes
- Makeup session management
- Reports and analytics
- Term management and archiving

**10. Ensure mobile-first responsive design**
**11. Implement smooth animations throughout**
**12. Use local storage for data persistence**
**13. Include proper error handling**
**14. Implement accessibility features**

=== CRITICAL SUCCESS CRITERIA ===

The reconstructed app must be:
✓ IDENTICAL in visual appearance to the original
✓ IDENTICAL in functionality and behavior
✓ IDENTICAL in animations and transitions
✓ IDENTICAL in mobile responsiveness
✓ IDENTICAL in user experience
✓ IDENTICAL in data management
✓ IDENTICAL in interaction patterns

=== FINAL INSTRUCTIONS ===

1. Read ALL provided code files carefully
2. Implement the EXACT visual specifications
3. Use the EXACT animation code provided
4. Follow the EXACT component structure
5. Implement ALL functionality as specified
6. Test on mobile and desktop
7. Ensure smooth performance
8. Maintain the professional tennis coaching aesthetic

The app must look, feel, and function EXACTLY like the original Tennis Tracker with the glass morphism design, smooth animations, and complete functionality for tennis coaching management.

END FILE: COMPLETE_BASE44_RECONSTRUCTION_PROMPT
